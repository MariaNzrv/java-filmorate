CREATE TABlE IF NOT EXISTS rating (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(30),
    description VARCHAR(200)
);

CREATE TABlE IF NOT EXISTS films (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(400),
    releaseDate DATE,
    duration INTEGER,
    rating_id INTEGER REFERENCES rating(id) ON DELETE SET NULL
);

CREATE TABlE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100),
    email VARCHAR(50) NOT NULL,
    login VARCHAR(50) NOT NULL,
    birthday DATE
);

CREATE TABlE IF NOT EXISTS likes (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    film_id INTEGER REFERENCES films (id) ON DELETE CASCADE
);

CREATE TABlE IF NOT EXISTS genre (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

CREATE TABlE IF NOT EXISTS film_genre (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_id INTEGER REFERENCES genre (id) ON DELETE CASCADE,
    film_id INTEGER REFERENCES films (id) ON DELETE CASCADE
);

CREATE TABlE IF NOT EXISTS friend_status (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    status_code VARCHAR(30) NOT NULL
);

CREATE TABlE IF NOT EXISTS friendship (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    friend_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    status_code_id INTEGER REFERENCES friend_status (id) ON DELETE SET NULL
);